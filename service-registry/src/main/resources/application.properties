
# ============== APPLICATION CONFIGURATION ================
server.port=${PORT:8761}
spring.application.name=${APPLICATION_NAME:registry-server}
spring.profiles.active=${PROFILE:dev}
spring.main.allow-bean-definition-overriding=${ALLOW_BEEN_DEFINITION:true}

# ============== EUREKA CONFIGURATION ================
#eureka.client.serviceUrl.defaultZone=${EUREKA_DEFAULT_ZONE:http://service-registry:8761/eureka/}
eureka.client.serviceUrl.defaultZone=${EUREKA_DEFAULT_ZONE:http://localhost:8761/eureka/}

# eureka by default will register itself as a client. So, we need to set it to false.
# What's a client server? See other microservices.
eureka.client.fetchRegistry=${EUREKA_SELF_REGISTRATION:false}
eureka.client.registerWithEureka=${EUREKA_SELF_REGISTRATION:false}
eureka.instance.lease-renewal-interval-in-seconds=30
eureka.instance.lease-expiration-duration-in-seconds=90


# ============ HEALTH INFORMATION ========================
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

# ============ LOGS ===================
logging.level.com.netflix.eureka=DEBUG
logging.level.com.netflix.discovery=INFO
logging.level.org.springframework=INFO